import React, { useState, useEffect } from "react";
import { View, Text } from "react-native";
import MapView, { Marker, PROVIDER_DEFAULT, UrlTile } from "react-native-maps";
import { createStyleSheet, useStyles } from "react-native-unistyles";
import { formStyles } from "./style";

interface MapProps {
  label?: string;
  error?: string;
  helper?: string;
  initialLocation?: {
    latitude: number;
    longitude: number;
  };
  onLocationSelect?: (location: {
    latitude: number;
    longitude: number;
  }) => void;
  disabled?: boolean;
}

export const Map: React.FC<MapProps> = ({
  label,
  error,
  helper,
  initialLocation = { latitude: 48.8566, longitude: 2.3522 }, // Default to Paris
  onLocationSelect,
  disabled,
}) => {
  const { styles, theme } = useStyles(formStyles);
  const [selectedLocation, setSelectedLocation] = useState(initialLocation);

  const handleMapPress = (event: any) => {
    if (disabled) return;
    const { coordinate } = event.nativeEvent;
    setSelectedLocation(coordinate);
    onLocationSelect?.(coordinate);
  };

  return (
    <View style={styles.formControl}>
      {label && <Text style={styles.label}>{label}</Text>}
      <View
        style={[
          mapStyles.mapContainer,
          error && styles.inputError,
          disabled && styles.inputDisabled,
        ]}
      >
        <MapView
          provider={PROVIDER_DEFAULT}
          style={mapStyles.map}
          onPress={handleMapPress}
          region={{
            ...selectedLocation,
            latitudeDelta: 0.0922,
            longitudeDelta: 0.0421,
          }}
        >
          <UrlTile
            urlTemplate="https://tile.openstreetmap.org/{z}/{x}/{y}.png"
            maximumZ={19}
          />
          <Marker
            coordinate={selectedLocation}
            pinColor={error ? theme.colors.error : theme.colors.primary}
          />
        </MapView>
      </View>
      {(error || helper) && (
        <Text style={[styles.helperText, error && styles.errorText]}>
          {error || helper}
        </Text>
      )}
    </View>
  );
};

const mapStyles = createStyleSheet({
  mapContainer: {
    height: 300,
    borderRadius: 8,
    overflow: "hidden",
    borderWidth: 1,
    borderColor: ({ theme }) => theme.colors.border,
  },
  map: {
    flex: 1,
    width: "100%",
  },
});
